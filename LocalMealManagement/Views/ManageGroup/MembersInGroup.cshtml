@model List<LocalMealManagement.ViewModel.UserViewModel>

@using LocalMealManagement.Services
@inject IGroupRepository groupRepository
@{ 
    var currentUserName = User.Identity.Name;
    var isGroupSuperAdminCurrentUser = groupRepository.IsUserAlreadyInGroup(ViewBag.groupId, currentUserName, true);
}
<html>
<head>
    <title>MembersInGroup</title>
    <script src="~/js/balanceAdd.js"></script>
</head>
<body>
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>
                    Username
                </th>
                <th>
                    Action
                </th>
            </tr>
        </thead>
        <tbody>
            @{
                string groupId = @ViewBag.groupId;
            }
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                    <td>
                        @if (item.subGroupId != "NULL")
                        {
                            <div class="row">
                                <div class="col-md-5">
                                    <input class="form-control" id=@item.UserName placeholder="Enter Balance" onkeyup="pulsar(this)" />
                                </div>
                                <div class="col-md-5">
                                    <button class="btn btn-primary" onclick="saveBalance( '$@item.UserName' , '$@item.subGroupId', '$@ViewBag.groupId' )"> Submit </button>
                                </div>
                            </div>
                        }
                        else
                        {
                            var isGroupSuperAdmin = groupRepository.IsUserAlreadyInGroup(ViewBag.groupId, item.UserName, true);
                            
                            @if (isGroupSuperAdminCurrentUser)
                            {
                                if (isGroupSuperAdmin)
                                {
                                    <a href="/ManageGroup/KickOutUserFromGroup?userId=@item.UserId&groupId=@ViewBag.groupId" class="not-allowed" onclick="return false;">Kick out</a>
                                }
                                else
                                {
                                    <a href="/ManageGroup/KickOutUserFromGroup?userId=@item.UserId&groupId=@ViewBag.groupId" onclick="return confirm('Are you sure you want to kick out!')">Kick out</a>
                                }
                            }

                            @if (User.Identity.Name == item.UserName)
                            {
                                if (isGroupSuperAdmin)
                                {
                                    <a href="/ManageGroup/KickOutUserFromGroup?userId=@item.UserId&groupId=@ViewBag.groupId" class="not-allowed" onclick="return false;">Leave</a>
                                }
                                else
                                {
                                    <a href="/ManageGroup/KickOutUserFromGroup?userId=@item.UserId&groupId=@ViewBag.groupId" onclick="return confirm('Are you sure you want to Leave!')">Leave</a>
                                }
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>


    @*<script type="text/javascript">
            function saveBalance(userName, subGroupId) {
                    if (!confirm("Are You Sure About this Action?")) return;
                    var UserName = "";
                    var subGroupID = "";
                    subGroupID = subGroupId;
                    UserName = userName;
                    var xx = document.getElementById(UserName.substring(1));
                    var AccountViewModel = {
                        Taka: parseFloat(xx.value),
                        groupId: @groupId,
                        subGroupId: subGroupID.substring(1),
                        UserName: UserName.substring(1)
                    };
                    xx.value = "0";
                    var jsonData = AccountViewModel;
                   // console.log(jsonData);
                    $.ajax({
                        type: "POST",
                        url: '/Account/AddBalance',
                        data: { model: jsonData },
                        datatype: AccountViewModel,
                        success: function (response) {
                            //console.log(response.userName);
                            alert("Balanced Added Succesfully to " + response.userName);
                           // console.log("Hello");
                        },
                        fail: function (response) {
                            alert("Somethings Went Wrong!");
                        }
                    })
            };

            function pulsar(obj) {
                obj.value = Math.abs(parseFloat(obj.value));
                console.log(obj.value);
                if (obj.value == "NaN") obj.value = "0";
            }

        </script>*@
</body>
</html>

